{"version":3,"sources":["components/mapIngredients.js","components/RecipeCards.js","components/fetchRecipeByIngredient.js","components/app-bar.js","components/viewRecipe.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["MapIngredients","ingredients","used","Grid","item","map","ingredient","Chip","key","style","marginRight","icon","label","color","useStyles","makeStyles","root","maxWidth","minWidth","media","height","MediaCard","props","classes","Card","className","id","CardActionArea","CardMedia","image","title","CardContent","Typography","gutterBottom","variant","component","container","spacing","usedIngredients","excludedIngredients","CardActions","Button","size","to","pathname","state","RecipeFinder","currentIngredient","recipes","showSpinner","onIngredientUpdate","bind","onAddIngredient","onIngredientSubmit","convertIngredientsToString","recipeList","onIngredientDelete","filterUsedIngredients","filterExcludedIngredients","event","this","setState","target","value","preventDefault","subList","push","tempList","tempWord","forEach","element","length","console","log","reverse","pop","toString","converetedString","join","ingredientURL","direction","justify","alignItems","recipe","filter","name","unusedIngredients","url","axios","get","process","then","response","data","catch","error","LinearProgress","Container","Paper","Box","px","TextField","type","onChange","onClick","disabled","pt","onDelete","React","Component","theme","flexGrow","menuButton","CustomAppBar","AppBar","position","Toolbar","IconButton","edge","aria-label","RecipeViewer","match","params","information","similarRecipes","location","idList","index","detailedResponse","my","py","display","justifyContent","elevation","mainRecipe","src","alt","padding","readyInMinutes","mt","withStyles","background","border","borderRadius","boxShadow","App","path","exact","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message","module","exports"],"mappings":"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","file":"static/js/main.cf95bcef.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport DoneIcon from \"@material-ui/icons/Done\";\r\nimport ClearIcon from \"@material-ui/icons/Clear\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport makeStyles from \"@material-ui/styles/makeStyles\";\r\n\r\nexport default function MapIngredients(ingredients, used) {\r\n  return (\r\n    <Grid item>\r\n      {ingredients.map((ingredient) => {\r\n        return (\r\n          <Chip\r\n            key={ingredient}\r\n            style={{ marginRight: \"10px\" }}\r\n            icon={used !== true ? <ClearIcon /> : <DoneIcon />}\r\n            label={ingredient}\r\n            color={used !== true ? \"secondary\" : \"primary\"}\r\n          />\r\n        );\r\n      })}\r\n    </Grid>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport DoneIcon from \"@material-ui/icons/Done\";\r\nimport ClearIcon from \"@material-ui/icons/Clear\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport MapIngredients from \"./mapIngredients\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: 345,\r\n    minWidth: 220,\r\n  },\r\n  media: {\r\n    height: 140,\r\n  },\r\n});\r\n\r\n// onCardClick() {\r\n\r\n// }\r\n\r\nexport default function MediaCard(props) {\r\n  const classes = useStyles();\r\n  return (\r\n    <Card className={classes.root} key={props.id}>\r\n      <CardActionArea>\r\n        <CardMedia\r\n          image={props.image}\r\n          title={props.title}\r\n          className={classes.media}\r\n        />\r\n        <CardContent>\r\n          <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n            {props.title}\r\n          </Typography>\r\n          <Grid container spacing={1}>\r\n            <Grid item>{MapIngredients(props.usedIngredients, true)}</Grid>\r\n            <Grid item>{MapIngredients(props.excludedIngredients, false)}</Grid>\r\n          </Grid>\r\n        </CardContent>\r\n      </CardActionArea>\r\n      <CardActions>\r\n        <Button size=\"small\">Not interested</Button>\r\n        <Button size=\"small\" color=\"primary\">\r\n          <Link\r\n            to={{\r\n              pathname: `/recipes/${props.id}`,\r\n              state: {\r\n                usedIngredients: props.usedIngredients,\r\n                excludedIngredients: props.excludedIngredients,\r\n              },\r\n            }}\r\n          >\r\n            {\" \"}\r\n            Learn More{\" \"}\r\n          </Link>\r\n        </Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport \"../App.css\";\r\nimport MediaCard from \"./RecipeCards\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nimport { spacing } from \"@material-ui/system\";\r\n\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\nimport { Divider } from \"@material-ui/core\";\r\nimport Box from \"@material-ui/core/Box\";\r\n\r\nexport class RecipeFinder extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      ingredients: [],\r\n      currentIngredient: \"\",\r\n      recipes: [],\r\n      showSpinner: false,\r\n    };\r\n\r\n    this.onIngredientUpdate = this.onIngredientUpdate.bind(this);\r\n    this.onAddIngredient = this.onAddIngredient.bind(this);\r\n    this.onIngredientSubmit = this.onIngredientSubmit.bind(this);\r\n    this.convertIngredientsToString = this.convertIngredientsToString.bind(\r\n      this\r\n    );\r\n    this.recipeList = this.recipeList.bind(this);\r\n    this.onIngredientDelete = this.onIngredientDelete.bind(this);\r\n    this.filterUsedIngredients = this.filterUsedIngredients.bind(this);\r\n    this.filterExcludedIngredients = this.filterExcludedIngredients.bind(this);\r\n  }\r\n\r\n  onIngredientUpdate(event) {\r\n    this.setState({\r\n      currentIngredient: event.target.value,\r\n    });\r\n  }\r\n\r\n  onAddIngredient(event) {\r\n    event.preventDefault();\r\n\r\n    let subList = this.state.ingredients;\r\n\r\n    subList.push(this.state.currentIngredient);\r\n\r\n    this.setState({\r\n      ingredients: subList,\r\n      currentIngredient: \"\",\r\n    });\r\n  }\r\n\r\n  convertIngredientsToString() {\r\n    let tempList = [\"\"];\r\n\r\n    let tempWord = \"\";\r\n\r\n    this.state.ingredients.forEach((element) => {\r\n      if (\r\n        element !== this.state.ingredients[this.state.ingredients.length - 1]\r\n      ) {\r\n        tempWord = tempWord + \"+\" + element;\r\n      } else {\r\n        tempWord = element;\r\n      }\r\n\r\n      console.log(tempWord);\r\n\r\n      tempList.push(tempWord);\r\n\r\n      tempWord = \"\";\r\n    });\r\n\r\n    tempList = tempList.reverse();\r\n\r\n    tempList.pop();\r\n\r\n    console.log(tempList.toString());\r\n\r\n    let converetedString = tempList.join(\",\");\r\n    this.setState(\r\n      {\r\n        ingredientURL: tempList,\r\n      },\r\n      () => {\r\n        this.onIngredientSubmit(converetedString);\r\n      }\r\n    );\r\n  }\r\n\r\n  recipeList() {\r\n    return (\r\n      <Grid\r\n        container\r\n        direction=\"row\"\r\n        justify=\"flex-start\"\r\n        alignItems=\"center\"\r\n        spacing={2}\r\n      >\r\n        {this.state.recipes.map((recipe) => {\r\n          let usedIngredients = this.filterUsedIngredients(recipe);\r\n          let excludedIngredients = this.filterExcludedIngredients(recipe);\r\n\r\n          return (\r\n            <Grid item>\r\n              <MediaCard\r\n                title={recipe.title}\r\n                image={recipe.image}\r\n                id={recipe.id}\r\n                usedIngredients={usedIngredients}\r\n                excludedIngredients={excludedIngredients}\r\n              />\r\n            </Grid>\r\n          );\r\n        })}\r\n      </Grid>\r\n    );\r\n  }\r\n\r\n  onIngredientDelete(title) {\r\n    this.setState(\r\n      {\r\n        ingredients: this.state.ingredients.filter(\r\n          (ingredient) => ingredient !== title\r\n        ),\r\n      },\r\n      () => {\r\n        this.convertIngredientsToString();\r\n      }\r\n    );\r\n  }\r\n\r\n  filterUsedIngredients(recipe) {\r\n    let usedIngredients = [];\r\n\r\n    recipe.usedIngredients.map((ingredient) => {\r\n      usedIngredients.push(ingredient.name);\r\n    });\r\n\r\n    console.log(usedIngredients);\r\n    return usedIngredients;\r\n  }\r\n\r\n  filterExcludedIngredients(recipe) {\r\n    let excludedIngredients = [];\r\n\r\n    recipe.unusedIngredients.map((ingredient) => {\r\n      excludedIngredients.push(ingredient.name);\r\n    });\r\n\r\n    console.log(excludedIngredients);\r\n    return excludedIngredients;\r\n  }\r\n\r\n  onIngredientSubmit(url) {\r\n    this.setState({\r\n      showSpinner: true,\r\n    });\r\n\r\n    axios\r\n      .get(\r\n        `https://api.spoonacular.com/recipes/findByIngredients?apiKey=${process.env.REACT_APP_APIKEY}&ingredients=${url}&number=10`\r\n      )\r\n      .then((response) => {\r\n        console.log(response.data);\r\n\r\n        this.setState(\r\n          {\r\n            recipes: response.data,\r\n            showSpinner: false,\r\n          },\r\n          () => {\r\n            console.log(this.state.recipes);\r\n          }\r\n        );\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n    // console.log(this.state.recipes.toString());\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.state.showSpinner === true ? <LinearProgress /> : <span></span>}\r\n        <Container>\r\n          <h3>Search recipes</h3>\r\n          <Paper>\r\n            <Box px={2}>\r\n              <Grid\r\n                className=\"search-bar\"\r\n                container\r\n                direction=\"row\"\r\n                justify=\"flex-start\"\r\n                alignItems=\"center\"\r\n                spacing={3}\r\n              >\r\n                <Grid item>\r\n                  <TextField\r\n                    variant=\"filled\"\r\n                    type=\"text\"\r\n                    label=\"Ingredient\"\r\n                    onChange={this.onIngredientUpdate}\r\n                    value={this.state.currentIngredient}\r\n                  />\r\n                </Grid>\r\n                <Grid item>\r\n                  {this.state.ingredients.length < 3 ? (\r\n                    <Button\r\n                      variant=\"outlined\"\r\n                      color=\"primary\"\r\n                      type=\"submit\"\r\n                      onClick={this.onAddIngredient}\r\n                    >\r\n                      Add Ingredient\r\n                    </Button>\r\n                  ) : (\r\n                    <Button disabled variant=\"filled\" color=\"primary\">\r\n                      Max Ingredients\r\n                    </Button>\r\n                  )}\r\n                </Grid>\r\n                <Grid item>\r\n                  {this.state.ingredients.length !== 0 ? (\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      type=\"submit\"\r\n                      onClick={this.convertIngredientsToString}\r\n                    >\r\n                      Search Recipes\r\n                    </Button>\r\n                  ) : (\r\n                    <Button disabled>Search Recipes</Button>\r\n                  )}\r\n                </Grid>\r\n              </Grid>\r\n            </Box>\r\n          </Paper>\r\n\r\n          <Grid\r\n            container\r\n            direction=\"row\"\r\n            justify=\"flex-start\"\r\n            alignItems=\"center\"\r\n            spacing={2}\r\n          >\r\n            {this.state.ingredients.map((ingredient) => {\r\n              return (\r\n                <Grid item>\r\n                  <Box pt={2}>\r\n                    <Chip\r\n                      label={ingredient}\r\n                      onDelete={() => {\r\n                        this.onIngredientDelete(ingredient);\r\n                      }}\r\n                    />\r\n                  </Box>\r\n                </Grid>\r\n              );\r\n            })}\r\n          </Grid>\r\n\r\n          {this.state.showSpinner === false ? this.recipeList() : <span></span>}\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RecipeFinder;\r\n","import React from \"react\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nfunction CustomAppBar() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <AppBar position=\"static\">\r\n      <Toolbar>\r\n        <IconButton\r\n          edge=\"start\"\r\n          className={classes.menuButton}\r\n          color=\"inherit\"\r\n          aria-label=\"menu\"\r\n        >\r\n          <MenuIcon />\r\n        </IconButton>\r\n        <Typography variant=\"h6\" className={classes.title}>\r\n          Recipeasy\r\n        </Typography>\r\n        <Button color=\"inherit\">Login</Button>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\n\r\nexport default CustomAppBar;\r\n","import React from \"react\";\r\nimport { Grid, LinearProgress, Typography, Divider } from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport createSpacing from \"@material-ui/core/styles/createSpacing\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport PropTypes from \"prop-types\";\r\nimport MapIngredients from \"./mapIngredients\";\r\n\r\nconst styles = {\r\n  root: {\r\n    background: \"linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)\",\r\n    border: 0,\r\n    borderRadius: 3,\r\n    boxShadow: \"0 3px 5px 2px rgba(255, 105, 135, .3)\",\r\n    color: \"white\",\r\n    height: 48,\r\n    padding: \"0 30px\",\r\n  },\r\n  mainRecipe: {\r\n    padding: \"35px\",\r\n  },\r\n};\r\n\r\nclass RecipeViewer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      id: this.props.match.params.id,\r\n      information: [],\r\n      showSpinner: false,\r\n      usedIngredients: [],\r\n      similarRecipes: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    let usedIngredients = this.props.location.state.usedIngredients;\r\n    let tempList = [];\r\n    let idList = [];\r\n\r\n    this.setState({\r\n      showSpinner: true,\r\n      usedIngredients: usedIngredients,\r\n    });\r\n    axios\r\n      .get(\r\n        `https://api.spoonacular.com/recipes/${this.state.id}/information?apiKey=${process.env.REACT_APP_APIKEY}&includeNutrition=false`\r\n      )\r\n      .then((response) => {\r\n        this.setState(\r\n          {\r\n            information: response.data,\r\n            showSpinner: false,\r\n          },\r\n          () => {\r\n            // console.log(response.data);\r\n          }\r\n        );\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n    axios\r\n      .get(\r\n        `https://api.spoonacular.com/recipes/${this.state.id}/similar?apiKey=${process.env.REACT_APP_APIKEY}`\r\n      )\r\n      .then((response) => {\r\n        for (\r\n          let index = response.data.length;\r\n          index < response.data.length;\r\n          index++\r\n        ) {\r\n          idList.push(response.data[index].id);\r\n\r\n          return axios\r\n            .get(\r\n              `https://api.spoonacular.com/recipes/${idList}/information?apiKey=${process.env.REACT_APP_APIKEY}&includeNutrition=false`\r\n            )\r\n            .then((detailedResponse) => {\r\n              console.log(detailedResponse.data);\r\n              // tempList.push(detailedResponse);\r\n              // this.setState(\r\n              //   {\r\n              //     similarRecipes: tempList,\r\n              //   },\r\n              //   () => {\r\n              //     console.log(this.state.similarRecipes + \"d\");\r\n              //   }\r\n              // );\r\n            })\r\n            .catch((error) => {\r\n              console.log(\"Error fetching recipe by ID\" + error);\r\n            });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"Error finding similar recipes\" + error);\r\n      });\r\n\r\n    // axios\r\n    //   .get(\r\n    //     `https://api.spoonacular.com/recipes/${this.state.id}/ingredientWidget.json?apiKey=${process.env.REACT_APP_APIKEY}`\r\n    //   )\r\n    //   .then((response) => {\r\n    //     this.setState({\r\n    //       usedIngredients: response.data.ingredients.map((ingredient) => {\r\n    //         return ingredient.name;\r\n    //       }),\r\n\r\n    //     });\r\n    //   });\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <div>\r\n        {this.state.showSpinner !== false ? <LinearProgress /> : <span></span>}\r\n        <Box my={4}>\r\n          <Container>\r\n            <Box py={2} px={4} display=\"flex\" justifyContent=\"center\">\r\n              <Paper elevation={3} className={classes.mainRecipe}>\r\n                <Grid\r\n                  container\r\n                  justify=\"flex-start\"\r\n                  alignItems=\"flex-start\"\r\n                  spacing={1}\r\n                >\r\n                  <Grid item>\r\n                    <img\r\n                      style={{ maxWidth: 400 }}\r\n                      src={\r\n                        this.state.information.image ||\r\n                        \"https://cookthestory.com/wp-content/uploads/2016/08/how-to-grill-chicken.jpg\"\r\n                      }\r\n                      alt={\r\n                        \"Image of\" + this.state.information.title || \"alt text\"\r\n                      }\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Box px={3}>\r\n                    <Grid container spacing={1} direction=\"column\">\r\n                      <Grid item>\r\n                        <Typography variant=\"h4\" gutterBottom>\r\n                          {this.state.information.title || \"Grilled Chicken\"}\r\n                        </Typography>\r\n                      </Grid>\r\n\r\n                      <Grid item>\r\n                        {MapIngredients(this.state.usedIngredients, true)}\r\n                      </Grid>\r\n                      <Grid item>\r\n                        <ul style={{ padding: \"15px\" }}>\r\n                          <li style={{ padding: \"0px\" }}>\r\n                            <Typography variant=\"subtitle1\" gutterBottom>\r\n                              {\"Ready in \" +\r\n                                this.state.information.readyInMinutes +\r\n                                \" minutes. \"}\r\n                            </Typography>\r\n                          </li>\r\n                        </ul>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Box>\r\n                </Grid>\r\n              </Paper>\r\n            </Box>\r\n\r\n            <Box mt={3}>\r\n              <Typography variant=\"h4\">Similar Recipes</Typography>\r\n              <Paper>\r\n                <Box px={2} py={2}>\r\n                  <p>{this.state.similarRecipes.length}</p>\r\n                </Box>\r\n              </Paper>\r\n            </Box>\r\n          </Container>\r\n        </Box>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nRecipeViewer.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(RecipeViewer);\r\n","import React from \"react\";\r\nimport logo from \"./logo.svg\";\r\nimport \"./App.css\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport RecipeFinder from \"./components/fetchRecipeByIngredient\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport CustomAppBar from \"./components/app-bar\";\r\nimport RecipeViewer from \"./components/viewRecipe\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <CustomAppBar />\r\n\r\n      <Route path=\"/\" exact component={RecipeFinder} />\r\n      <Route path=\"/recipes/:id\" component={RecipeViewer} />\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";"],"sourceRoot":""}